// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Amiable stack matches the snapshot 1`] = `
Object {
  "Outputs": Object {
    "LoadBalancerAmiableDnsName": Object {
      "Description": "DNS entry for LoadBalancerAmiable",
      "Value": Object {
        "Fn::GetAtt": Array [
          "LoadBalancerAmiable9C4DD4AF",
          "DNSName",
        ],
      },
    },
  },
  "Parameters": Object {
    "AMIAmiable": Object {
      "Description": "Amazon Machine Image ID for the app amiable. Use this in conjunction with AMIgo to keep AMIs up to date.",
      "Type": "AWS::EC2::Image::Id",
    },
    "AccessLoggingBucket": Object {
      "Default": "/account/services/access-logging/bucket",
      "Description": "S3 bucket to store your access logs",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "DistributionBucketName": Object {
      "Default": "/account/services/artifact.bucket",
      "Description": "SSM parameter containing the S3 bucket name holding distribution artifacts",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "EmailSenderAddress": Object {
      "AllowedPattern": "^[a-zA-Z]+(\\\\.[a-zA-Z]+)*@theguardian.com$",
      "ConstraintDescription": "Must be an @theguardian.com email address",
      "Description": "The sender of emails sent using SES.",
      "Type": "String",
    },
    "LoggingStreamName": Object {
      "Default": "/account/services/logging.stream.name",
      "Description": "SSM parameter containing the Name (not ARN) on the kinesis stream",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "VpcId": Object {
      "Default": "/account/vpc/primary/id",
      "Description": "Virtual Private Cloud to run EC2 instances within. Should NOT be the account default VPC.",
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::VPC::Id>",
    },
    "amiablePrivateSubnets": Object {
      "Default": "/account/vpc/primary/subnets/private",
      "Description": "A list of private subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
    "amiablePublicSubnets": Object {
      "Default": "/account/vpc/primary/subnets/public",
      "Description": "A list of public subnets",
      "Type": "AWS::SSM::Parameter::Value<List<AWS::EC2::Subnet::Id>>",
    },
  },
  "Resources": Object {
    "AutoScalingGroupAmiableASGFCD99427": Object {
      "Properties": Object {
        "HealthCheckGracePeriod": 120,
        "HealthCheckType": "ELB",
        "LaunchConfigurationName": Object {
          "Ref": "AutoScalingGroupAmiableLaunchConfig09A6D8E3",
        },
        "MaxSize": "2",
        "MinSize": "1",
        "Tags": Array [
          Object {
            "Key": "App",
            "PropagateAtLaunch": true,
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:pattern-name",
            "PropagateAtLaunch": true,
            "Value": "GuPlayApp",
          },
          Object {
            "Key": "gu:cdk:version",
            "PropagateAtLaunch": true,
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "PropagateAtLaunch": true,
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "LogKinesisStreamName",
            "PropagateAtLaunch": true,
            "Value": Object {
              "Ref": "LoggingStreamName",
            },
          },
          Object {
            "Key": "Name",
            "PropagateAtLaunch": true,
            "Value": "amiable/AutoScalingGroupAmiable",
          },
          Object {
            "Key": "Stack",
            "PropagateAtLaunch": true,
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "PropagateAtLaunch": true,
            "Value": "CODE",
          },
          Object {
            "Key": "SystemdUnit",
            "PropagateAtLaunch": true,
            "Value": "amiable.service",
          },
        ],
        "TargetGroupARNs": Array [
          Object {
            "Ref": "TargetGroupAmiable6987B5AC",
          },
        ],
        "VPCZoneIdentifier": Object {
          "Ref": "amiablePrivateSubnets",
        },
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
    },
    "AutoScalingGroupAmiableInstanceProfile386BEAE5": Object {
      "Properties": Object {
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::InstanceProfile",
    },
    "AutoScalingGroupAmiableLaunchConfig09A6D8E3": Object {
      "DependsOn": Array [
        "InstanceRoleAmiable56110022",
      ],
      "Properties": Object {
        "IamInstanceProfile": Object {
          "Ref": "AutoScalingGroupAmiableInstanceProfile386BEAE5",
        },
        "ImageId": Object {
          "Ref": "AMIAmiable",
        },
        "InstanceType": "t4g.micro",
        "MetadataOptions": Object {
          "HttpTokens": "required",
        },
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "GuHttpsEgressSecurityGroupAmiable42C3598C",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "WazuhSecurityGroup",
              "GroupId",
            ],
          },
        ],
        "UserData": Object {
          "Fn::Base64": "#!/bin/bash -ev

          mkdir /amiable
          aws --region eu-west-1 s3 cp s3://deploy-tools-dist/deploy/CODE/amiable/conf/amiable-service-account-cert.json /amiable/
          aws --region eu-west-1 s3 cp s3://deploy-tools-dist/deploy/CODE/amiable/conf/amiable.conf /etc/
          aws --region eu-west-1 s3 cp s3://deploy-tools-dist/deploy/CODE/amiable/amiable.deb /amiable/

          dpkg -i /amiable/amiable.deb",
        },
      },
      "Type": "AWS::AutoScaling::LaunchConfiguration",
    },
    "CertificateAmiable3AC0F81D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "DomainName": "amiable.code.dev-gutools.co.uk",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "ValidationMethod": "DNS",
      },
      "Type": "AWS::CertificateManager::Certificate",
      "UpdateReplacePolicy": "Retain",
    },
    "CloudwatchPolicyFEF3FFD1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cloudwatch:*",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CloudwatchPolicyFEF3FFD1",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DescribeEC2PolicyFF5F9295": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "autoscaling:DescribeAutoScalingInstances",
                "autoscaling:DescribeAutoScalingGroups",
                "ec2:DescribeTags",
                "ec2:DescribeInstances",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "describe-ec2-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GetDistributablePolicyAmiableE65882EA": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "DistributionBucketName",
                    },
                    "/deploy/CODE/amiable/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GetDistributablePolicyAmiableE65882EA",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuHttpsEgressSecurityGroupAmiable42C3598C": Object {
      "Properties": Object {
        "GroupDescription": "Allow all outbound HTTPS traffic",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound HTTPS traffic",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "GuHttpsEgressSecurityGroupAmiablefromamiableLoadBalancerAmiableSecurityGroup8E8C9583900089C3896F": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupAmiable42C3598C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAmiableSecurityGroupAE4F7AF8",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuHttpsEgressSecurityGroupAmiablefromamiableRestrictedIngressSecurityGroupAmiableFA2DDED29000D4E8B76E": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupAmiable42C3598C",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "SourceSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "RestrictedIngressSecurityGroupAmiableF2034457",
            "GroupId",
          ],
        },
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupIngress",
    },
    "GuLogShippingPolicy981BFE5A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "kinesis:Describe*",
                "kinesis:Put*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:kinesis:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":stream/",
                    Object {
                      "Ref": "LoggingStreamName",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuLogShippingPolicy981BFE5A",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "GuSESSenderPolicy2E2A75A2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ses:SendEmail",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ses:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":identity/",
                    Object {
                      "Ref": "EmailSenderAddress",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "GuSESSenderPolicy2E2A75A2",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "InstanceRoleAmiable56110022": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "ec2.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Path": "/",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ListenerAmiable4B1060D6": Object {
      "Properties": Object {
        "Certificates": Array [
          Object {
            "CertificateArn": Object {
              "Ref": "CertificateAmiable3AC0F81D",
            },
          },
        ],
        "DefaultActions": Array [
          Object {
            "TargetGroupArn": Object {
              "Ref": "TargetGroupAmiable6987B5AC",
            },
            "Type": "forward",
          },
        ],
        "LoadBalancerArn": Object {
          "Ref": "LoadBalancerAmiable9C4DD4AF",
        },
        "Port": 443,
        "Protocol": "HTTPS",
      },
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
    },
    "LoadBalancerAmiable9C4DD4AF": Object {
      "Properties": Object {
        "LoadBalancerAttributes": Array [
          Object {
            "Key": "deletion_protection.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.enabled",
            "Value": "true",
          },
          Object {
            "Key": "access_logs.s3.bucket",
            "Value": Object {
              "Ref": "AccessLoggingBucket",
            },
          },
          Object {
            "Key": "access_logs.s3.prefix",
            "Value": "ELBLogs/deploy/amiable/CODE",
          },
        ],
        "Scheme": "internet-facing",
        "SecurityGroups": Array [
          Object {
            "Fn::GetAtt": Array [
              "LoadBalancerAmiableSecurityGroupAE4F7AF8",
              "GroupId",
            ],
          },
          Object {
            "Fn::GetAtt": Array [
              "RestrictedIngressSecurityGroupAmiableF2034457",
              "GroupId",
            ],
          },
        ],
        "Subnets": Object {
          "Ref": "amiablePublicSubnets",
        },
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "Type": "application",
      },
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
    },
    "LoadBalancerAmiableSecurityGroupAE4F7AF8": Object {
      "Properties": Object {
        "GroupDescription": "Automatically created Security Group for ELB amiableLoadBalancerAmiableD818374E",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "LoadBalancerAmiableSecurityGrouptoamiableGuHttpsEgressSecurityGroupAmiable7C2576F69000B827F6DB": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupAmiable42C3598C",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "LoadBalancerAmiableSecurityGroupAE4F7AF8",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "ParameterStoreReadAmiable24BF3AAC": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "ssm:GetParametersByPath",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/deploy/amiable",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:eu-west-1:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/CODE/deploy/amiable/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "parameter-store-read-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "RestrictedIngressSecurityGroupAmiableF2034457": Object {
      "Properties": Object {
        "GroupDescription": "Allow restricted ingress from CIDR ranges",
        "SecurityGroupIngress": Array [
          Object {
            "CidrIp": "192.168.1.1/22",
            "Description": "Allow access on port 443 from 192.168.1.1/22",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          Object {
            "CidrIp": "192.168.1.2/22",
            "Description": "Allow access on port 443 from 192.168.1.2/22",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
          Object {
            "CidrIp": "192.168.1.3/22",
            "Description": "Allow access on port 443 from 192.168.1.3/22",
            "FromPort": 443,
            "IpProtocol": "tcp",
            "ToPort": 443,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "RestrictedIngressSecurityGroupAmiabletoamiableGuHttpsEgressSecurityGroupAmiable7C2576F69000C038BE6D": Object {
      "Properties": Object {
        "Description": "Load balancer to target",
        "DestinationSecurityGroupId": Object {
          "Fn::GetAtt": Array [
            "GuHttpsEgressSecurityGroupAmiable42C3598C",
            "GroupId",
          ],
        },
        "FromPort": 9000,
        "GroupId": Object {
          "Fn::GetAtt": Array [
            "RestrictedIngressSecurityGroupAmiableF2034457",
            "GroupId",
          ],
        },
        "IpProtocol": "tcp",
        "ToPort": 9000,
      },
      "Type": "AWS::EC2::SecurityGroupEgress",
    },
    "SSMRunCommandPolicy244E1613": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ec2messages:AcknowledgeMessage",
                "ec2messages:DeleteMessage",
                "ec2messages:FailMessage",
                "ec2messages:GetEndpoint",
                "ec2messages:GetMessages",
                "ec2messages:SendReply",
                "ssm:UpdateInstanceInformation",
                "ssm:ListInstanceAssociations",
                "ssm:DescribeInstanceProperties",
                "ssm:DescribeDocumentParameters",
                "ssmmessages:CreateControlChannel",
                "ssmmessages:CreateDataChannel",
                "ssmmessages:OpenControlChannel",
                "ssmmessages:OpenDataChannel",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ssm-run-command-policy",
        "Roles": Array [
          Object {
            "Ref": "InstanceRoleAmiable56110022",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TargetGroupAmiable6987B5AC": Object {
      "Properties": Object {
        "HealthCheckIntervalSeconds": 10,
        "HealthCheckPath": "/healthcheck",
        "HealthCheckProtocol": "HTTP",
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 5,
        "Port": 9000,
        "Protocol": "HTTP",
        "Tags": Array [
          Object {
            "Key": "App",
            "Value": "amiable",
          },
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "TargetGroupAttributes": Array [
          Object {
            "Key": "deregistration_delay.timeout_seconds",
            "Value": "30",
          },
          Object {
            "Key": "stickiness.enabled",
            "Value": "false",
          },
        ],
        "TargetType": "instance",
        "UnhealthyThresholdCount": 2,
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
    },
    "WazuhSecurityGroup": Object {
      "Properties": Object {
        "GroupDescription": "Allow outbound traffic from wazuh agent to manager",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh event logging",
            "FromPort": 1514,
            "IpProtocol": "tcp",
            "ToPort": 1514,
          },
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Wazuh agent registration",
            "FromPort": 1515,
            "IpProtocol": "tcp",
            "ToPort": 1515,
          },
        ],
        "Tags": Array [
          Object {
            "Key": "gu:cdk:version",
            "Value": "TEST",
          },
          Object {
            "Key": "gu:repo",
            "Value": "guardian/amiable",
          },
          Object {
            "Key": "Stack",
            "Value": "deploy",
          },
          Object {
            "Key": "Stage",
            "Value": "CODE",
          },
        ],
        "VpcId": Object {
          "Ref": "VpcId",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
}
`;
